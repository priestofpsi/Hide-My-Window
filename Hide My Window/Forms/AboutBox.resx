<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>