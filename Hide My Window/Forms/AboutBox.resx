<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>